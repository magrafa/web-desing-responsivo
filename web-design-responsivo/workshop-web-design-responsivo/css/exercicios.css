
/* transformar o grid de notícias em 3 colunas usando porcentagens de 33%. */
.secao {
    float: left;
    width: 33.333%;
}

/* notícias mini que tem uma divisão em 2 colunas dentro do grid principal. 
usar porcentagens novamente, agora com 50% */
.mini {
    float: left;
    width: 50%;
}


/* centralizar o conteúdo na tela e defina um tamanho máximo de 1200px */
.container{
    margin: 0 auto;
    max-width: 1200px;
}
.logo,.secao {
    padding: 0 1%;
}

/* evitar que as imagens estourem os elementos que as contém
 no caso de usarmos uma resolução baixa com uma imagem grande. Atingimos isso com o max-width. */
img {
    max-width: 100%;
}


/* Queremos configurar o topo do site, que inclui o logotipo, o menu e a busca de maneira mais flexível. 
Colocar tudo na mesma linha no Desktop e permitir que, ao redimensionar, os blocos "escorreguem" para baixo naturalmente. 
É uma espécie de adaptação do layout ainda sem media queries, usando inline-block. */
.logo,.busca,.barra-nav,.menu-principal {
    display: inline-block;
    vertical-align: middle;
}
.menu-principal li {
    float: left;
}
header {
    padding: 0.5em 0;
}
.destaques {
    margin-top: 1em;
}
.barra-nav {
    margin: 0.4em 0;
}


/* Como usamos o layout com medidas 'em', 
usar media queries para aumentar todas as fontes proporcionalmente em telas maiores. Por exemplo: */
@media (min-width: 600px) {
    html {
        font-size: 1.125em;
    }
}
@media (min-width: 1000px) {
    html {
        font-size: 1.25em;
    }
}

/* O maior ajuste necessário é no número de colunas das notícias. 
Dividimos tudo em 3 colunas antes, o que é bom para o Desktop. 
Mas talvez fosse interessante deixar em 1 coluna em telas pequenas e 2 colunas em telas intermediárias. 
Use media queries para isso e mobile-first. */
.secao {
    width: 100%;
}

@media (min-width: 600px) {
    .secao {
        width: 50%;
    }
}
@media (min-width: 1000px) {
    .secao {
        width: 33.333%;
    }
}


/*  posicionar o menu lateralmente fora da tela. Vamos usar um position:fixed pra isso. 
 usar transitions para animá-lo de volta a tela quando estiver ativo (class menu-ativo). */
@media (max-width: 600px) {
    .barra-nav {
        background: #f0f0f0;
        padding: 1em;
        margin: 0;

        height: 100%;
        width: 90%;
        max-width: 320px;

        position: fixed;
        z-index: 1;
        top: 0;
        left: -90%;

        transition: left 0.3s ease-out;
    }
        .menu-ativo .barra-nav {
            left: 0;
        }

    .menu-principal li {
        padding: 1em 0;
        width: 100%;
    }
}


/* 
Um último ajuste, já que o no Desktop o menu lateral não é usado, é esconder os botões nessa situação. 
Para isso, usamosdisplay:none nos botões com a media query inversa da anterior */

@media not all and (max-width: 600px) {
    .menu-abrir,
    .menu-fechar {
        display: none;
    }    
}


/* Implemente um fundo cinza na página para obscurecer
 o conteúdo de fundo quando o menu estiver ativo por cima. 
Uma ideia é fazer isso com pseudo-elemento no <html> quando o menu estiver ativo. */
@media (max-width: 600px) {
    .menu-ativo:after {
        content: "";
        display: block;

        position: fixed;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;

        background: rgba(0,0,0,0.4);
    }
}